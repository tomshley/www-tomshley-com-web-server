apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: www-tomshley-com-web-server
  name: www-tomshley-com-web-server
  namespace: www-tomshley-com-web-server-namespace
spec:
  replicas: 2
  selector:
    matchLabels:
      app: www-tomshley-com-web-server
  template:
    metadata:
      labels:
        app: www-tomshley-com-web-server
        actorSystemName: www-tomshley-com-web-server
    spec:
      imagePullSecrets:
        - name: registry-credentials
      # If dedicated nodes and taints are required:
      # nodeSelector:
      #   cloud.google.com/gke-nodepool: www-tomshley-com-pool-websvr
      # tolerations:
      #   - key: "www-tomshley-com-pooltaintdedicated"
      #     operator: "Equal"
      #     value: "www-tomshley-com-pool-websvr-taint"
      #     effect: "NoSchedule"
      containers:
        - name: www-tomshley-com-web-server
          # use specific image version from docker publish
          image: registry.gitlab.com/tomshley/brands/usa/tomshleyllc/tech/www-tomshley-com-web-server/www-tomshley-com-web-server:0.0.3
          imagePullPolicy: IfNotPresent
          # support for cloudflared tunnel
          args: [ "tunnel", "--no-autoupdate", "run", "--token={token}" ]
          # these will need to be increased tuned for production environments!
          # Standard Akka Performance reference
          # resources:
          #  limits:
          #    memory: "2Gi"
          #  requests:
          #    memory: "2Gi"
          #    cpu: "1"

          readinessProbe:
            httpGet:
              path: "/ready"
              port: management
            periodSeconds: 10
            failureThreshold: 3
            initialDelaySeconds: 120
          livenessProbe:
            httpGet:
              path: "/alive"
              port: management
            periodSeconds: 20
            failureThreshold: 5
            initialDelaySeconds: 30
          ports:
            - name: web
              containerPort: 8080
              protocol: TCP
            - name: grpc
              containerPort: 80
              protocol: TCP
            - name: remoting
              containerPort: 7355
              protocol: TCP
            - name: management
              containerPort: 7626
              protocol: TCP
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: HOSTNAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
            - name: REQUIRED_CONTACT_POINT_NR
              value: "2"
            - name: JAVA_TOOL_OPTIONS
              value: "-XX:InitialRAMPercentage=75 -XX:MaxRAMPercentage=75"
            - name: APP_LABEL
              valueFrom:
                fieldRef:
                  fieldPath: "metadata.labels['app']"
            - name: WWW_TOMSHLEY_COM_CONTACT_SERVICE_INTERFACE
              value: "www-tomshley-com-contact-service-k8service.www-tomshley-com-contact-service-namespace"
            - name: WWW_TOMSHLEY_COM_CONTACT_SERVICE_PORT
              value: "80"

